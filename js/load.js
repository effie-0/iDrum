//存储所有的鼓点
var beatFlow = new Array();
var busArray = new Array();
//用来存储track 信息的全局变量
var track = new Object();
//表示下一个将检查的音符
var playPointer = 0;
var ForReading = 1;
var songList = new Array();

function Song(address){
    var song = new Object();
    this.address = address;
    this.song = address + "/song.mp3";
    this.background = address + "/background.jpg";
    this.trackList = new Array();
}



if(songList.length){
    songList.splice(0,songList.length);
}

var newSong1 = new Song("../src/Songs/1");
var newSong2 = new Song("../src/Songs/2");
var directory1 = ["Gom (HoneyWorks) - Zen Zen Zense (Antalf) [4K Easy Collab].osu", "Gom (HoneyWorks) - Zen Zen Zense (Antalf) [4K Normal].osu", "Gom (HoneyWorks) - Zen Zen Zense (Antalf) [6K Easy].osu", "Gom (HoneyWorks) - Zen Zen Zense (Antalf) [6K Hard].osu", "Gom (HoneyWorks) - Zen Zen Zense (Antalf) [6K Normal].osu", "Gom (HoneyWorks) - Zen Zen Zense (Antalf) [Kaito's 7K Advanced].osu", "Gom (HoneyWorks) - Zen Zen Zense (Antalf) [Kaito's 7K Hard].osu", "Gom (HoneyWorks) - Zen Zen Zense (Antalf) [Kaito's 7K Normal].osu", "Gom (HoneyWorks) - Zen Zen Zense (Antalf) [L.Tay's 5K Easy].osu", "Gom (HoneyWorks) - Zen Zen Zense (Antalf) [L.Tay's 5K Hard].osu", "Gom (HoneyWorks) - Zen Zen Zense (Antalf) [L.Tay's 5K Normal].osu", "Gom (HoneyWorks) - Zen Zen Zense (Antalf) [Prot's 4K Hard].osu", "song.mp3", ]
var directory2 = ["namirin - Koi no Hime Hime Pettanko (Litharrale) [Easy].js", "namirin - Koi no Hime Hime Pettanko (Litharrale) [Easy].osu", "namirin - Koi no Hime Hime Pettanko (Litharrale) [Hard].js", "namirin - Koi no Hime Hime Pettanko (Litharrale) [Hard].osu", "namirin - Koi no Hime Hime Pettanko (Litharrale) [Normal].js", "namirin - Koi no Hime Hime Pettanko (Litharrale) [Normal].osu", "namirin - Koi no Hime Hime Pettanko (Litharrale) [Virtue's HIME].js", "namirin - Koi no Hime Hime Pettanko (Litharrale) [Virtue's HIME].osu", "song.mp3", ]
newSong1.trackList = directory1;
newSong2.trackList = directory2;
newSong1.title = "Zen Zen Zense";
newSong2.title = "Koi no Hime Hime Pettanko";
newSong1.artist = "Gom(HoneyWorks)";
newSong2.artist = "namirin";
songList.push(newSong1);
songList.push(newSong2);
var beatmap1 = ["osu file format v14", "", "[General]", "AudioFilename: audio.mp3", "AudioLeadIn: 0", "PreviewTime: 4664", "Countdown: 0", "SampleSet: Soft", "StackLeniency: 0.7", "Mode: 3", "LetterboxInBreaks: 0", "SpecialStyle: 1", "WidescreenStoryboard: 1", "", "[Editor]", "DistanceSpacing: 0.8", "BeatDivisor: 4", "GridSize: 16", "TimelineZoom: 4.099999", "", "[Metadata]", "Title:Zen Zen Zense", "TitleUnicode:前前前世", "Artist:Gom (HoneyWorks)", "ArtistUnicode:Gom（HoneyWorks）", "Creator:Antalf", "Version:6K Easy", "Source:君の名は。", "Tags:Kimi no Na Wa Your Name Acoustic Cover Protastic101 LinkTaylord Kaito-Kun RADWIMPS", "BeatmapID:1211271", "BeatmapSetID:571547", "", "[Difficulty]", "HPDrainRate:7", "CircleSize:6", "OverallDifficulty:7", "ApproachRate:5", "SliderMultiplier:1.6", "SliderTickRate:1", "", "[Events]", "//Background and Video events",  "//Break Periods", "//Storyboard Layer 0 (Background)", "//Storyboard Layer 1 (Fail)", "//Storyboard Layer 2 (Pass)", "//Storyboard Layer 3 (Foreground)", "//Storyboard Sound Samples", "", "[TimingPoints]", "243,315.78946,4,2,1,60,1,0", "5295,315.62186,4,2,1,60,1,0", "5295,-101.0101,4,2,1,60,0,1", "9398,-101.0101,4,2,1,60,0,0", "15394,-101.0101,4,2,1,60,0,1", "19497,-101.0101,4,2,1,60,0,0", "22969,322.58066,4,2,1,60,1,0", "22969,-97.89525,4,2,1,60,0,0", "24116,317.46033,4,2,1,60,1,0", "24116,-99.0099,4,2,1,60,0,0", "24433,315.78946,4,2,1,60,1,0", "24433,-100,4,2,1,60,0,0", "24590,256.41025,4,2,1,60,1,0", "24590,-123.15271,4,2,1,60,0,0", "24718,315.78946,4,2,1,60,1,0", "24718,-100,4,2,1,60,0,0", "24890,315.78946,4,2,1,60,1,0", "25020,315.78946,4,2,1,60,1,0", "25190,315.78946,4,2,1,60,1,0", "25330,315.78946,4,2,1,60,1,0", "25478,317.46033,4,2,1,60,1,0", "25478,-99.0099,4,2,1,60,0,0", "29944,315.78946,4,2,1,60,1,0", "", "", "[HitObjects]", "42,192,243,5,8,0:0:0:60:", "469,192,243,1,0,0:0:0:0:", "128,192,400,1,0,0:0:0:60:", "213,192,558,1,0,0:0:0:60:", "298,192,874,128,0,1190:0:0:0:60:", "384,192,1190,1,0,0:0:0:60:", "469,192,1348,128,8,1664:0:0:0:60:", "128,192,1664,1,0,0:0:0:60:", "213,192,1821,1,0,0:0:0:60:", "384,192,2137,1,0,0:0:0:60:", "128,192,2295,1,0,0:0:0:0:", "298,192,2453,128,8,2769:0:0:0:60:", "192,192,2769,1,8,0:0:0:60:", "42,192,2769,1,0,0:0:0:60:", "384,192,2907,1,0,0:0:0:60:", "469,192,3085,1,0,0:0:0:60:", "298,192,3400,1,0,0:0:0:60:", "128,192,3716,1,0,0:0:0:60:", "469,192,3874,1,0,0:0:0:60:", "213,192,4032,1,8,0:0:0:60:", "42,192,4242,1,8,0:0:0:60:", "469,192,4453,1,8,0:0:0:60:", "213,192,4664,1,8,0:0:0:60:", "42,192,5295,1,12,0:0:0:60:", "128,192,5295,1,0,0:0:0:0:", "384,192,5610,1,2,0:0:0:60:", "469,192,5610,1,0,0:0:0:60:", "298,192,5926,1,4,0:0:0:60:", "213,192,6084,1,4,0:0:0:0:", "384,192,6241,1,2,0:0:0:60:", "128,192,6241,1,0,0:0:0:60:", "42,192,6399,128,12,6715:0:0:0:60:", "213,192,6715,1,4,0:0:0:60:", "469,192,6873,1,2,0:0:0:60:", "298,192,6873,1,0,0:0:0:60:", "128,192,7188,1,4,0:0:0:60:", "298,192,7346,1,4,0:0:0:0:", "384,192,7504,1,2,0:0:0:60:", "213,192,7504,1,0,0:0:0:60:", "469,192,7819,128,12,8135:0:0:0:60:", "42,192,8135,1,2,0:0:0:60:", "128,192,8135,1,0,0:0:0:60:", "213,192,8451,1,4,0:0:0:60:", "384,192,8609,1,4,0:0:0:0:", "298,192,8766,1,2,0:0:0:60:", "469,192,8766,1,0,0:0:0:60:", "128,192,8924,128,12,9240:0:0:0:60:", "213,192,9240,1,4,0:0:0:60:", "469,192,9398,1,2,0:0:0:60:", "384,192,9398,1,0,0:0:0:60:", "298,192,9713,1,4,0:0:0:60:", "213,192,9871,1,4,0:0:0:0:", "128,192,10029,1,2,0:0:0:60:", "384,192,10029,1,0,0:0:0:60:", "42,192,10187,1,4,0:0:0:0:", "213,192,10344,128,12,10660:0:0:0:60:", "469,192,10660,1,2,0:0:0:60:", "298,192,10660,1,0,0:0:0:60:", "384,192,10976,1,4,0:0:0:60:", "298,192,11134,1,4,0:0:0:0:", "128,192,11291,1,2,0:0:0:60:", "42,192,11291,1,0,0:0:0:60:", "384,192,11449,128,12,11765:0:0:0:60:", "42,192,11765,1,4,0:0:0:60:", "298,192,11923,1,2,0:0:0:60:", "213,192,11923,1,0,0:0:0:60:", "128,192,12238,1,4,0:0:0:60:", "213,192,12396,1,4,0:0:0:0:", "298,192,12554,1,2,0:0:0:60:", "469,192,12554,1,0,0:0:0:0:", "384,192,12869,128,12,13185:0:0:0:60:", "298,192,13185,1,2,0:0:0:60:", "42,192,13185,1,0,0:0:0:60:", "128,192,13501,1,4,0:0:0:60:", "384,192,13658,1,4,0:0:0:0:", "469,192,13816,1,2,0:0:0:60:", "298,192,13816,1,0,0:0:0:60:", "128,192,13974,128,12,14290:0:0:0:60:", "469,192,14290,1,4,0:0:0:60:", "42,192,14448,1,2,0:0:0:60:", "298,192,14448,1,0,0:0:0:60:", "213,192,14605,128,12,14921:0:0:0:60:", "384,192,14921,1,4,0:0:0:60:", "42,192,15079,1,2,0:0:0:60:", "128,192,15079,1,0,0:0:0:0:", "298,192,15237,1,4,0:0:0:0:", "128,192,15394,128,12,15710:0:0:0:60:", "213,192,15710,1,2,0:0:0:60:", "384,192,15710,1,0,0:0:0:60:", "42,192,16026,1,4,0:0:0:60:", "298,192,16183,1,4,0:0:0:0:", "384,192,16341,1,2,0:0:0:60:", "469,192,16341,1,0,0:0:0:60:", "213,192,16499,128,12,16815:0:0:0:60:", "298,192,16815,1,4,0:0:0:60:", "42,192,16973,1,0,0:0:0:60:", "469,192,16973,1,2,0:0:0:60:", "128,192,17288,1,4,0:0:0:60:", "298,192,17446,1,4,0:0:0:0:", "384,192,17604,1,2,0:0:0:60:", "213,192,17604,1,0,0:0:0:60:", "298,192,17919,128,12,18235:0:0:0:60:", "42,192,18235,1,2,0:0:0:60:", "128,192,18235,1,0,0:0:0:60:", "469,192,18551,1,4,0:0:0:60:", "298,192,18708,1,4,0:0:0:0:", "384,192,18866,1,2,0:0:0:60:", "128,192,18866,1,0,0:0:0:60:", "213,192,19024,128,12,19340:0:0:0:60:", "469,192,19340,1,4,0:0:0:60:", "42,192,19497,1,2,0:0:0:60:", "298,192,19497,1,0,0:0:0:60:", "384,192,19813,1,4,0:0:0:60:", "298,192,19971,1,4,0:0:0:0:", "128,192,20129,1,2,0:0:0:60:", "213,192,20129,1,0,0:0:0:60:", "298,192,20444,128,12,20760:0:0:0:60:", "469,192,20760,1,2,0:0:0:60:", "128,192,20760,1,0,0:0:0:60:", "213,192,21076,1,4,0:0:0:60:", "128,192,21233,1,4,0:0:0:0:", "42,192,21391,1,2,0:0:0:60:", "213,192,21391,1,0,0:0:0:60:", "384,192,21549,128,12,21865:0:0:0:60:", "128,192,21865,1,4,0:0:0:60:", "42,192,22022,1,2,0:0:0:60:", "298,192,22022,1,0,0:0:0:60:", "384,192,22338,1,4,0:0:0:60:", "298,192,22496,1,0,0:0:0:0:", "469,192,22654,1,2,0:0:0:60:", "213,192,22654,1,0,0:0:0:60:", "384,192,22969,128,12,23291:0:0:0:60:", "213,192,23291,1,2,0:0:0:60:", "42,192,23291,1,0,0:0:0:0:", "298,192,23614,1,4,0:0:0:60:", "128,192,23775,1,4,0:0:0:0:", "469,192,23936,1,2,0:0:0:60:", "42,192,23936,1,0,0:0:0:60:", "298,192,24116,128,12,24433:0:0:0:0:", "384,192,24433,1,4,0:0:0:0:", "213,192,24590,1,2,0:0:0:60:", "42,192,24590,1,0,0:0:0:60:", "469,192,24718,1,4,0:0:0:60:", "128,192,25020,1,4,0:0:0:60:", "384,192,25190,1,2,0:0:0:0:", "469,192,25190,1,0,0:0:0:0:", "298,192,25330,1,4,0:0:0:0:", "213,192,25478,1,12,0:0:0:0:", "128,192,25795,1,4,0:0:0:60:", "298,192,26112,1,8,0:0:0:60:", "469,192,26112,1,2,0:0:0:60:", "384,192,26430,1,4,0:0:0:60:", "213,192,26589,1,2,0:0:0:60:", "42,192,26589,1,0,0:0:0:0:", "298,192,26747,1,4,0:0:0:0:", "128,192,26906,1,2,0:0:0:60:", "384,192,26906,1,4,0:0:0:0:", "469,192,27065,1,0,0:0:0:60:", "298,192,27382,1,12,0:0:0:60:", "42,192,27382,1,2,0:0:0:60:", "128,192,27700,1,4,0:0:0:60:", "298,192,27858,1,2,0:0:0:0:", "213,192,27858,1,4,0:0:0:0:", "469,192,28017,128,8,29604:0:0:0:60:", "42,192,28017,128,4,29604:0:0:0:60:", "384,192,29944,1,8,0:0:0:60:", "128,192,29944,1,4,0:0:0:60:", "384,192,30101,128,4,30259:0:0:0:60:", "128,192,30101,128,8,30259:0:0:0:60:"];
var beatmap2 = ["osu file format v14", "", "[General]", "AudioFilename: audio.mp3", "AudioLeadIn: 0", "PreviewTime: 60282", "Countdown: 0", "SampleSet: Soft", "StackLeniency: 0.7", "Mode: 3", "LetterboxInBreaks: 0", "SpecialStyle: 0", "WidescreenStoryboard: 1", "", "[Editor]", "DistanceSpacing: 0.7", "BeatDivisor: 4", "GridSize: 16", "TimelineZoom: 1.7", "", "[Metadata]", "Title:Koi no Hime Hime Pettanko", "TitleUnicode:恋のヒメヒメぺったんこ", "Artist:*namirin", "ArtistUnicode:*なみりん", "Creator:Litharrale", "Version:Easy", "Source:弱虫ペダル", "Tags:yowamushi pedal Virtue utaite", "BeatmapID:1284174", "BeatmapSetID:607139", "", "[Difficulty]", "HPDrainRate:7", "CircleSize:4", "OverallDifficulty:7", "ApproachRate:5", "SliderMultiplier:1.4", "SliderTickRate:1", "", "[Events]", "//Background and Video events", "0,0,0,0", "//Break Periods", "//Storyboard Layer 0 (Background)", "//Storyboard Layer 1 (Fail)", "//Storyboard Layer 2 (Pass)", "//Storyboard Layer 3 (Foreground)", "//Storyboard Sound Samples", "", "[TimingPoints]", "1799,337.078651685393,4,2,1,20,1,0", "7192,-100,4,2,1,40,0,0", "61124,-100,4,2,1,40,0,1", "70563,-100,4,2,1,40,0,0", "71911,-100,4,2,1,40,0,1", "85394,-100,4,2,1,20,0,0", "", "", "[HitObjects]", "64,192,1799,5,2,0:0:0:0:", "320,192,2136,1,10,0:0:0:0:", "448,192,2473,1,2,0:0:0:0:", "192,192,2810,1,10,0:0:0:0:", "64,192,3147,1,2,0:0:0:0:", "192,192,3484,1,10,0:0:0:0:", "448,192,3821,1,2,0:0:0:0:", "320,192,4158,1,10,0:0:0:0:", "64,192,4495,1,2,0:0:0:0:", "192,192,4832,1,10,0:0:0:0:", "448,192,5169,1,2,0:0:0:0:", "64,192,5506,1,10,0:0:0:0:", "448,192,5843,1,2,0:0:0:0:", "320,192,6181,1,10,0:0:0:0:", "64,192,6518,128,2,6855:0:0:0:0:", "448,192,6855,128,2,7192:0:0:0:0:", "192,192,7192,128,6,7529:0:0:0:0:", "320,192,7192,1,0,0:0:0:0:", "64,192,8372,1,2,0:0:0:0:", "448,192,8540,128,6,8877:0:0:0:0:", "192,192,8540,1,0,0:0:0:0:", "64,192,9551,1,10,0:0:0:0:", "448,192,9888,128,6,10225:0:0:0:0:", "320,192,9888,1,0,0:0:0:0:", "192,192,11068,1,2,0:0:0:0:", "320,192,11237,128,6,11574:0:0:0:0:", "448,192,11237,1,0,0:0:0:0:", "64,192,12248,128,8,12585:0:0:0:0:", "320,192,12585,1,14,0:0:0:0:", "448,192,12585,1,0,0:0:0:0:", "192,192,12922,1,10,0:0:0:0:", "448,192,13259,1,0,0:0:0:0:", "64,192,13596,1,10,0:0:0:0:", "320,192,13933,1,10,0:0:0:0:", "192,192,14270,1,10,0:0:0:0:", "448,192,14607,1,2,0:0:0:0:", "64,192,14945,1,10,0:0:0:0:", "320,192,15282,1,10,0:0:0:0:", "192,192,15619,1,10,0:0:0:0:", "448,192,15956,1,2,0:0:0:0:", "320,192,16293,1,10,0:0:0:0:", "64,192,16630,128,14,17473:0:0:0:0:", "192,192,17473,1,2,0:0:0:0:", "320,192,17641,1,10,0:0:0:0:", "448,192,17978,1,6,0:0:0:0:", "192,192,18315,1,10,0:0:0:0:", "448,192,18652,1,0,0:0:0:0:", "64,192,18990,1,10,0:0:0:0:", "320,192,19327,1,2,0:0:0:0:", "448,192,19664,1,10,0:0:0:0:", "320,192,19832,1,2,0:0:0:0:", "64,192,20169,1,2,0:0:0:0:", "192,192,20338,1,10,0:0:0:0:", "448,192,20675,1,2,0:0:0:0:", "192,192,21012,1,10,0:0:0:0:", "320,192,21349,1,0,0:0:0:0:", "64,192,21686,1,10,0:0:0:0:", "192,192,22023,1,2,0:0:0:0:", "320,192,22360,1,10,0:0:0:0:", "192,192,22529,1,2,0:0:0:0:", "64,192,22866,1,2,0:0:0:0:", "448,192,23034,1,10,0:0:0:0:", "192,192,23372,1,2,0:0:0:0:", "448,192,23709,1,10,0:0:0:0:", "320,192,24046,1,0,0:0:0:0:", "64,192,24383,1,10,0:0:0:0:", "192,192,24720,1,2,0:0:0:0:", "320,192,25057,1,10,0:0:0:0:", "448,192,25225,1,2,0:0:0:0:", "64,192,25563,1,2,0:0:0:0:", "192,192,25731,1,10,0:0:0:0:", "320,192,25900,1,2,0:0:0:0:", "320,192,26237,1,2,0:0:0:0:", "192,192,26405,1,2,0:0:0:0:", "64,192,26574,1,2,0:0:0:0:", "448,192,26742,1,10,0:0:0:0:", "192,192,26911,1,2,0:0:0:0:", "448,192,27079,1,10,0:0:0:0:", "64,192,27248,1,2,0:0:0:0:", "320,192,27585,1,2,0:0:0:0:", "192,192,27754,1,2,0:0:0:0:", "64,192,27922,1,2,0:0:0:0:", "448,192,28091,1,10,0:0:0:0:", "64,192,28428,128,8,28765:0:0:0:0:", "192,192,28765,1,6,0:0:0:0:", "320,192,29102,1,10,0:0:0:0:", "64,192,29439,1,0,0:0:0:0:", "448,192,29776,1,10,0:0:0:0:", "64,192,30113,1,2,0:0:0:0:", "448,192,30450,1,10,0:0:0:0:", "192,192,30619,1,2,0:0:0:0:", "64,192,30956,1,2,0:0:0:0:", "320,192,31124,1,10,0:0:0:0:", "448,192,31461,1,2,0:0:0:0:", "64,192,31798,1,10,0:0:0:0:", "192,192,32136,1,0,0:0:0:0:", "448,192,32473,1,10,0:0:0:0:", "192,192,32810,1,2,0:0:0:0:", "320,192,33147,1,10,0:0:0:0:", "192,192,33315,1,2,0:0:0:0:", "64,192,33652,1,2,0:0:0:0:", "448,192,33821,1,10,0:0:0:0:", "192,192,34158,1,2,0:0:0:0:", "64,192,34495,1,10,0:0:0:0:", "320,192,34832,1,0,0:0:0:0:", "448,192,35169,1,10,0:0:0:0:", "192,192,35506,1,2,0:0:0:0:", "320,192,35843,1,10,0:0:0:0:", "64,192,36012,1,2,0:0:0:0:", "448,192,36349,1,2,0:0:0:0:", "320,192,36518,1,10,0:0:0:0:", "192,192,36686,1,2,0:0:0:0:", "64,192,36855,1,2,0:0:0:0:", "320,192,37023,1,2,0:0:0:0:", "448,192,37192,1,10,0:0:0:0:", "320,192,37529,1,2,0:0:0:0:", "192,192,37697,1,2,0:0:0:0:", "64,192,37866,1,10,0:0:0:0:", "448,192,38034,1,6,0:0:0:0:", "320,192,38372,1,2,0:0:0:0:", "192,192,38540,1,2,0:0:0:0:", "320,192,38709,1,2,0:0:0:0:", "192,192,38877,128,10,39551:0:0:0:0:", "320,192,39551,1,14,0:0:0:0:", "64,192,39888,128,0,40225:0:0:0:0:", "320,192,40225,128,2,40563:0:0:0:0:", "192,192,40563,128,10,40900:0:0:0:0:", "448,192,40900,128,0,41237:0:0:0:0:", "320,192,41237,128,0,41574:0:0:0:0:", "64,192,41574,128,2,41911:0:0:0:0:", "192,192,41911,128,10,42248:0:0:0:0:", "448,192,42248,128,2,42754:0:0:0:0:", "320,192,42754,128,2,43596:0:0:0:0:", "64,192,43596,128,0,44607:0:0:0:0:", "192,192,44270,1,2,0:0:0:0:", "320,192,44439,1,10,0:0:0:0:", "448,192,44607,1,10,0:0:0:0:", "448,192,44945,1,6,0:0:0:0:", "320,192,45282,128,0,45619:0:0:0:0:", "192,192,45619,128,2,45956:0:0:0:0:", "448,192,45956,128,10,46293:0:0:0:0:", "64,192,46293,128,0,46630:0:0:0:0:", "320,192,46630,128,0,46967:0:0:0:0:", "448,192,46967,128,2,47304:0:0:0:0:", "192,192,47304,128,10,47641:0:0:0:0:", "320,192,47641,128,6,47978:0:0:0:0:", "64,192,47978,1,10,0:0:0:0:", "192,192,48315,1,8,0:0:0:0:", "320,192,48484,128,10,48821:0:0:0:0:", "192,192,48821,128,6,49495:0:0:0:0:", "448,192,49664,1,10,0:0:0:0:", "320,192,50001,1,10,0:0:0:0:", "64,192,50338,1,0,0:0:0:0:", "192,192,50338,1,14,0:0:0:0:", "448,192,50675,1,0,0:0:0:0:", "320,192,50675,1,10,0:0:0:0:", "64,192,51012,1,0,0:0:0:0:", "192,192,51012,1,10,0:0:0:0:", "320,192,51349,1,10,0:0:0:0:", "448,192,51349,1,0,0:0:0:0:", "64,192,51686,1,0,0:0:0:0:", "320,192,51686,1,14,0:0:0:0:", "192,192,52192,1,4,0:0:0:0:", "448,192,52192,1,2,0:0:0:0:", "320,192,52697,1,2,0:0:0:0:", "64,192,53034,1,0,0:0:0:0:", "448,192,53034,1,6,0:0:0:0:", "192,192,53372,1,0,0:0:0:0:", "320,192,53372,1,10,0:0:0:0:", "64,192,53709,1,0,0:0:0:0:", "448,192,53709,1,10,0:0:0:0:", "192,192,54046,1,0,0:0:0:0:", "320,192,54046,1,10,0:0:0:0:", "64,192,54383,1,4,0:0:0:0:", "448,192,54383,1,10,0:0:0:0:", "320,192,54720,1,10,0:0:0:0:", "64,192,54888,128,6,55563:0:0:0:0:", "448,192,55394,1,10,0:0:0:0:", "192,192,55563,128,14,56742:0:0:0:0:", "448,192,56742,1,10,0:0:0:0:", "320,192,56911,1,2,0:0:0:0:", "320,192,57416,1,10,0:0:0:0:", "192,192,57754,1,10,0:0:0:0:", "64,192,58091,1,10,0:0:0:0:", "448,192,58259,128,6,59439:0:0:0:0:", "64,192,59607,1,0,0:0:0:0:", "192,192,59607,1,14,0:0:0:0:", "448,192,59945,1,0,0:0:0:0:", "320,192,59945,1,10,0:0:0:0:", "64,192,60113,1,0,0:0:0:0:", "192,192,60113,1,10,0:0:0:0:", "320,192,61124,1,6,0:0:0:0:", "448,192,61124,1,0,0:0:0:0:", "64,192,61461,1,10,0:0:0:0:", "320,192,61798,1,2,0:0:0:0:", "192,192,62136,1,10,0:0:0:0:", "448,192,62473,1,0,0:0:0:0:", "320,192,62473,1,2,0:0:0:0:", "64,192,62810,1,10,0:0:0:0:", "192,192,63147,1,2,0:0:0:0:", "448,192,63484,1,10,0:0:0:0:", "320,192,63821,1,2,0:0:0:0:", "192,192,63821,1,0,0:0:0:0:", "64,192,64158,1,10,0:0:0:0:", "320,192,64495,1,2,0:0:0:0:", "192,192,64832,1,10,0:0:0:0:", "448,192,65169,1,2,0:0:0:0:", "64,192,65169,1,0,0:0:0:0:", "320,192,65506,1,10,0:0:0:0:", "192,192,65843,128,2,66181:0:0:0:0:", "320,192,66181,1,10,0:0:0:0:", "448,192,66518,1,6,0:0:0:0:", "64,192,66518,1,0,0:0:0:0:", "192,192,66855,1,10,0:0:0:0:", "320,192,67192,1,2,0:0:0:0:", "64,192,67529,1,10,0:0:0:0:", "448,192,67866,1,2,0:0:0:0:", "192,192,67866,1,0,0:0:0:0:", "320,192,68203,1,10,0:0:0:0:", "64,192,68540,1,2,0:0:0:0:", "320,192,68877,1,10,0:0:0:0:", "192,192,69214,128,2,69551:0:0:0:0:", "448,192,69214,1,0,0:0:0:0:", "64,192,69551,1,10,0:0:0:0:", "448,192,69888,1,2,0:0:0:0:", "320,192,70225,1,10,0:0:0:0:", "64,192,70394,1,0,0:0:0:0:", "192,192,70394,128,6,70900:0:0:0:0:", "448,192,70900,1,10,0:0:0:0:", "64,192,71237,1,10,0:0:0:0:", "192,192,71405,1,10,0:0:0:0:", "448,192,71574,1,2,0:0:0:0:", "320,192,71742,1,8,0:0:0:0:", "64,192,71911,1,0,0:0:0:0:", "192,192,71911,1,6,0:0:0:0:", "448,192,72248,1,10,0:0:0:0:", "320,192,72585,1,2,0:0:0:0:", "64,192,72922,1,10,0:0:0:0:", "320,192,73259,1,2,0:0:0:0:", "448,192,73259,1,0,0:0:0:0:", "192,192,73596,1,10,0:0:0:0:", "448,192,73933,1,2,0:0:0:0:", "64,192,74270,1,10,0:0:0:0:", "192,192,74607,1,2,0:0:0:0:", "320,192,74607,1,0,0:0:0:0:", "448,192,74945,1,10,0:0:0:0:", "320,192,75282,1,2,0:0:0:0:", "64,192,75619,1,10,0:0:0:0:", "192,192,75956,1,2,0:0:0:0:", "448,192,75956,1,0,0:0:0:0:", "320,192,76293,1,10,0:0:0:0:", "192,192,76461,1,0,0:0:0:0:", "448,192,76630,1,2,0:0:0:0:", "64,192,76967,1,10,0:0:0:0:", "192,192,77304,1,6,0:0:0:0:", "320,192,77304,1,0,0:0:0:0:", "448,192,77641,1,10,0:0:0:0:", "320,192,77978,1,2,0:0:0:0:", "64,192,78315,1,10,0:0:0:0:", "192,192,78652,1,2,0:0:0:0:", "320,192,78990,1,10,0:0:0:0:", "448,192,79327,128,6,79664:0:0:0:0:", "64,192,80001,1,2,0:0:0:0:", "192,192,80169,1,2,0:0:0:0:", "320,192,80338,1,10,0:0:0:0:", "448,192,80675,1,2,0:0:0:0:", "192,192,80843,1,2,0:0:0:0:", "320,192,81012,1,10,0:0:0:0:", "192,192,81181,1,2,0:0:0:0:", "64,192,81349,1,14,0:0:0:0:", "320,192,81686,1,10,0:0:0:0:", "192,192,82023,1,10,0:0:0:0:", "448,192,82360,1,10,0:0:0:0:", "64,192,82529,1,0,0:0:0:0:", "320,192,83034,1,0,0:0:0:0:", "64,192,83372,1,0,0:0:0:0:", "320,192,83709,1,0,0:0:0:0:", "192,192,83877,128,0,84214:0:0:0:30:LR_CymbalCCR.wav", "448,192,84214,1,2,0:0:0:0:", "320,192,84383,1,10,0:0:0:0:", "64,192,84551,1,2,0:0:0:0:", "448,192,84888,1,2,0:0:0:0:", "320,192,84888,1,0,0:0:0:0:", "192,192,85057,1,2,0:0:0:0:", "64,192,85057,1,0,0:0:0:0:", "448,192,85394,1,0,0:0:0:0:", "192,192,85731,1,0,0:0:0:0:", "320,192,86068,1,0,0:0:0:0:", "64,192,86405,1,0,0:0:0:0:", "448,192,86742,1,0,0:0:0:0:", "64,192,87079,1,0,0:0:0:0:", "448,192,87416,1,0,0:0:0:0:", "320,192,87754,1,0,0:0:0:0:", "192,192,88091,1,0,0:0:0:0:", "64,192,88428,1,0,0:0:0:0:", "320,192,88765,1,0,0:0:0:0:", "192,192,89102,1,0,0:0:0:0:", "320,192,89439,1,0,0:0:0:0:", "448,192,89776,1,0,0:0:0:0:", "64,192,90113,1,0,0:0:0:0:", "320,192,90450,1,0,0:0:0:0:", "448,192,90787,128,0,92978:0:0:0:0:", "64,192,93147,128,0,93484:0:0:0:0:", "192,192,93147,128,0,93484:0:0:0:0:"];

function loadSongs(){
}
/*
function loadSongs(){
    if(songList.length){
        songList.splice(0,songList.length);
    }

    var new_element=document.createElement("script");
    new_element.setAttribute("type","text/javascript");
    new_element.setAttribute("src","../src/Songs/directory.js");
    //var load = document.getElementById("load");
    //document.body.insertBefore(new_element, load);
    var head = document.querySelector("head");
    head.appendChild(new_element);

    directory_main.forEach( function (file){
        if(file === "DS.Store")
            return;

        var new_element=document.createElement("script");
        new_element.setAttribute("type","text/javascript");
        new_element.setAttribute("src","../src/Songs/" + file + "/directory.js");
        //document.body.insertBefore(new_element, load);
        head.appendChild(new_element);

        var newSong = Song("../src/Songs" + file);
        directory.forEach( function(item){
            var nameLen = item.length;
            if(nameLen > 4){
                var extension = item.substring(nameLen - 4);
                if(extension == ".osu"){
                    newSong.trackList.push(item);
                    if(newSong.trackList.length == 1){
                        var fso = new FileReader();
                        fso.readAsText(fileName);
                        var arr = fso.result.split("\r\n");
                        var i = 0;
                        while(arr[i].substring(0,12) != "TitleUnicode"){
                            i++;
                        }
                        newSong.title = arr[i].substring(13);
                        i += 2;
                        newSong.artist = arr[i].substring(14);
                    }
                }
            }
        });
    });

}*/

function Beat(time,type){
    var beat = new Object();
    beat.time = parseInt(time);
    //0 = hit, 1 = slide;
    console.info(beat.time);
    if(type == "128"){
        beat.type = 1;
    }
    else
    {
        beat.type = 0;
    }
    return beat;
}

//加载鼓谱
function loadTrack(fileName){
    if(beatFlow.length > 0){
        beatFlow.splice(0,beatFlow.length);
    }
    playPointer = 0;

    if(fileName == songList[0].address){
        var arr = beatmap1;
    }
    else{
        var arr = beatmap2;
    }
    var i = 0;
    while(arr[i] != "[HitObjects]"){
        i++;
    }
    i++;
    var len = arr.length;
    var j = i;
    var tempInfo = arr[j].split(",");
    while(tempInfo[0] == 256){
        j++;
        tempInfo = arr[j].split(",");
    }
    if(tempInfo[0] == 64 || tempInfo[0] == 192 ||tempInfo[0] == 320 ||tempInfo[0] == 448){
        track.keyNumber = 4;
    }
    else if(tempInfo[0] == 51 || tempInfo[0] == 460 || tempInfo[0] == 153 || tempInfo[0] == 358){
        track.keyNumber = 5;
    }
    else if(tempInfo[0] == 42 || tempInfo[0] == 128 || tempInfo[0] == 469 || tempInfo[0] == 213 || tempInfo[0] == 298 || tempInfo[0] == 384){
        track.keyNumber = 6;
    }
    else if(tempInfo[0] == 402 || tempInfo[0] == 36 || tempInfo[0] == 475 || tempInfo[0] == 182 || tempInfo[0] == 109 || tempInfo[0] == 329){
        track.keyNumber = 7;
    }
    else if(tempInfo[0] == 32 || tempInfo[0] == 96 || tempInfo[0] == 480 || tempInfo[0] == 224 || tempInfo[0] == 416 || tempInfo[0] == 288 || tempInfo[0] == 160 || tempInfo[0] == 352 ){
        track.keyNumber = 8;
    }
    else{
        track.keyNumber = 9;
    }

    while(i < len){
        console.info(i);
        var beatInfo = arr[i].split(",");
        //console.info(beatInfo);
        var newBeat = new Beat(beatInfo[2], beatInfo[3]);
        console.info(newBeat.time, typeof(newBeat.time));
        if(type in newBeat) {
            if (newBeat.type == 1) {
                var detail = beatInfo[5].split(":");
                newBeat.endtime = detail[0];
            }
        }
        if(track.keyNumber == 4){
            if(beatInfo[0] == 64){
                newBeat.trackNum = 0;
            }
            else if(beatInfo[0] == 192){
                newBeat.trackNum = 1;
            }
            else if(beatInfo[0] == 320){
                newBeat.trackNum = 2;
            }
            else if(beatInfo[0] == 448){
                newBeat.trackNum = 3;
            }
            else{
                newBeat.trackNum = Math.floor(4*Math.random());
            }
        }
        else if(track.keyNumber == 5){
            if(beatInfo[0] == 51){
                newBeat.trackNum = 0;
            }
            else if(beatInfo[0] == 153){
                newBeat.trackNum = 1;
            }
            else if(beatInfo[0] == 256){
                newBeat.trackNum = 2;
            }
            else if(beatInfo[0] == 358){
                newBeat.trackNum = 3;
            }
            else if(beatInfo[0] == 460){
                newBeat.trackNum = 4;
            }
            else{
                newBeat.trackNum = Math.floor(5*Math.random());
            }
        }
        else if(track.keyNumber == 6){
            if(beatInfo[0] == 42){
                newBeat.trackNum = 0;
            }
            else if(beatInfo[0] == 128){
                newBeat.trackNum = 1;
            }
            else if(beatInfo[0] == 213){
                newBeat.trackNum = 2;
            }
            else if(beatInfo[0] == 298){
                newBeat.trackNum = 3;
            }
            else if(beatInfo[0] == 384){
                newBeat.trackNum = 4;
            }
            else if(beatInfo[0] == 469){
                newBeat.trackNum = 5;
            }
            else{
                newBeat.trackNum = Math.floor(6*Math.random());
            }
        }
        else if(track.keyNumber == 7){
            if(beatInfo[0] == 36){
                newBeat.trackNum = 0;
            }
            else if(beatInfo[0] == 109){
                newBeat.trackNum = 1;
            }
            else if(beatInfo[0] == 182){
                newBeat.trackNum = 2;
            }
            else if(beatInfo[0] == 256){
                newBeat.trackNum = 3;
            }
            else if(beatInfo[0] == 329){
                newBeat.trackNum = 4;
            }
            else if(beatInfo[0] == 402){
                newBeat.trackNum = 5;
            }
            else if(beatInfo[0] == 475){
                newBeat.trackNum = 6;
            }
            else{
                newBeat.trackNum = Math.floor(7*Math.random());
            }
        }
        else if(track.keyNumber == 8){
            if(beatInfo[0] == 32){
                newBeat.trackNum = 0;
            }
            else if(beatInfo[0] == 96){
                newBeat.trackNum = 1;
            }
            else if(beatInfo[0] == 160){
                newBeat.trackNum = 2;
            }
            else if(beatInfo[0] == 224){
                newBeat.trackNum = 3;
            }
            else if(beatInfo[0] == 288){
                newBeat.trackNum = 4;
            }
            else if(beatInfo[0] == 352){
                newBeat.trackNum = 5;
            }
            else if(beatInfo[0] == 416){
                newBeat.trackNum = 6;
            }
            else if(beatInfo[0] == 480){
                newBeat.trackNum = 7;
            }
            else{
                newBeat.trackNum = Math.floor(8*Math.random());
            }
        }
        else{
            if(beatInfo[0] == 28){
                newBeat.trackNum = 0;
            }
            else if(beatInfo[0] == 85){
                newBeat.trackNum = 1;
            }
            else if(beatInfo[0] == 142){
                newBeat.trackNum = 2;
            }
            else if(beatInfo[0] == 199){
                newBeat.trackNum = 3;
            }
            else if(beatInfo[0] == 256){
                newBeat.trackNum = 4;
            }
            else if(beatInfo[0] == 312){
                newBeat.trackNum = 5;
            }
            else if(beatInfo[0] == 369){
                newBeat.trackNum = 6;
            }
            else if(beatInfo[0] == 426){
                newBeat.trackNum = 7;
            }
            else if(beatInfo[0] == 483){
                newBeat.trackNum = 8;
            }
            else{
                newBeat.trackNum = Math.floor(9*Math.random());
            }
        }
        i++;
        beatFlow.push(newBeat);
    }
}

function popBeat(currentTime){
    busArray.splice(0,busArray.length);
    if(typeof(beatFlow[playPointer].time) != "number"){
        return;
    }
    //console.info(parseInt(beatFlow[playPointer].time));

    while(beatFlow[playPointer].time <= currentTime){
        busArray.push(beatFlow[playPointer]);
        playPointer++;
    }
    //console.info(busArray.length);
}
